# Have the release run on every tag push
name: Release
on:
  push:
    branches:
      - 'higgs-boson'

# Define the actual build job
# NOTE: We must run all builds first
jobs:

  #
  # Handle all Linux Builds Here
  #
  build-linux:
    runs-on: ubuntu-latest
    steps:

      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      #
      # Handle Target: linux-x86
      #

      # Perform the build operation
      - name: Building Target linux-x86
        run: |
          mkdir -p .higgs-boson
          make -f HiggsBosonMakefile linux_x86

      # Upload the build artifacts (linux-x86)
      - name: Upload Packaged Library (linux-x86)
        uses: actions/upload-artifact@v2
        with:
          name: linux-x86
          retention-days: 1
          path: .higgs-boson/linux-x86.tar.gz

  #
  # Handle all macos Builds Here
  #
  build-darwin:
    runs-on: macos-latest
    steps:

      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      #
      # Handle Target: macos
      #

      # Perform the build operation
      - name: Building Target darwin-all
        run: |
          mkdir -p .higgs-boson
          make -f HiggsBosonMakefile darwin

      # Upload the build artifacts (darwin-arm64)
      - name: Upload Packaged Library (darwin-arm64)
        uses: actions/upload-artifact@v2
        with:
          name: darwin-arm64
          retention-days: 1
          path: .higgs-boson/darwin-arm64.tar.gz

      # Upload the build artifacts (darwin-x64)
      - name: Upload Packaged Library (darwin-x64)
        uses: actions/upload-artifact@v2
        with:
          name: darwin-x64
          retention-days: 1
          path: .higgs-boson/darwin-x64.tar.gz

      # Upload the build artifacts (darwin-x86)
      - name: Upload Packaged Library (darwin-x86)
        uses: actions/upload-artifact@v2
        with:
          name: darwin-x86
          retention-days: 1
          path: .higgs-boson/darwin-x86.tar.gz


  #
  # Handle Release Jobs Here
  #
  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-darwin]
    steps:

      # Deduce the short hash value for the current commit
      - name: Deduces the Short SHA/Hash for Commit
        id: short_sha
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

      # Release the artifacts on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.short_sha.outputs.sha8 }}
          release_name: Release v${{ steps.short_sha.outputs.sha8 }}
          body: |
            Changes in this Release
            - Releasing artifacts for commit: ${{ github.sha }}
          draft: false
          prerelease: false

      # Upload artifacts for target linux-x86
      - name: Download x86 Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-x86
          path: ./
      - name: Upload linux-x86 Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux-x86.tar.gz
          asset_name: linux-x86.tar.gz
          asset_content_type: application/gzip

      # Upload artifacts for target darwin-arm64
      - name: Download arm64 MacOS Artifacts
        uses: actions/download-artifact@v2
        with:
          name: darwin-arm64
          path: ./
      - name: Upload darwin-arm64 Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: darwin-arm64.tar.gz
          asset_name: darwin-arm64.tar.gz
          asset_content_type: application/gzip

      # Upload artifacts for target darwin-x64
      - name: Download x64 MacOS Artifacts
        uses: actions/download-artifact@v2
        with:
          name: darwin-x64
          path: ./
      - name: Upload darwin-x64 Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: darwin-x64.tar.gz
          asset_name: darwin-x64.tar.gz
          asset_content_type: application/gzip

      # Upload artifacts for target darwin-x86
      - name: Download x86 MacOS Artifacts
        uses: actions/download-artifact@v2
        with:
          name: darwin-x86
          path: ./
      - name: Upload darwin-x86 Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: darwin-x86.tar.gz
          asset_name: darwin-x86.tar.gz
          asset_content_type: application/gzip
