# Have the release run on every tag push
name: Release
on:
  push:
    branches:
      - 'higgs-boson'

# Define the actual build job
# NOTE: We must run all builds first
jobs:

  #
  # Handle all Linux Builds Here
  #
  build-linux:
    runs-on: ubuntu-latest
    steps:

      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Perform the build operation
      - name: Build SDL Library
        run: |
          mkdir -p build-linux
          cd build-linux/
          ../configure
          make
          cd ..

      # Zip/package the build artifacts
      - name: Package SDL (x86) Library
        run: |
          cp -r ./build-linux/include ./build-linux/build/.libs/
          cd ./build-linux/build/.libs/
          tar -zcvf libSDL2.linux-x86.tar.gz libSDL*.so libSDL*.so.* include/
          cd ../../../

      # Upload the build artifacts (x86)
      - name: Upload SDL packaged Library (x86)
        uses: actions/upload-artifact@v2
        with:
          name: linux-x86
          retention-days: 1
          path: ./build-linux/build/.libs/libSDL2.linux-x86.tar.gz


  #
  # Handle Release Jobs Here
  #
  release:
    runs-on: ubuntu-latest
    needs: [build-linux]
    steps:

      # Release the artifacts on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            Changes in this Release
            - Releasing artifacts for commit: ${{ github.sha }}
            - TODO - Add website for documenting relevant changes
          draft: false
          prerelease: false

      # Upload linux (x86) based artifacts to the release
      - name: Download x86 Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-x86
          path: libSDL2.linux-x86.tar.gz
      - name: Upload Linux (x86) Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: libSDL2.linux-x86.tar.gz
          asset_name: libSDL2.linux-x86.tar.gz
          asset_content_type: application/gzip
